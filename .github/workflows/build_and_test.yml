# AI code lmfao
name: Build and test

on:
  push:
    branches:
      - test-ci
      - master
  pull_request:
    branches:
      - test-ci
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: apartment
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up JDK 22
      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'

      # Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Wait for MySQL service to be healthy
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" --silent; then
              break
            fi
            echo "Waiting for MySQL..."
            sleep 1
          done

      # Create .env file with database credentials
      - name: Create .env file
        run: |
          echo "DB_USERNAME=test_user" >> .env
          echo "DB_PASSWORD=test_password" >> .env

      # Run build and tests
      - name: Build with Gradle
        run: ./gradlew build --scan --no-daemon

      # Run tests
      - name: Run Tests
        run: ./gradlew test

      # Build artifact JAR
      - name: Build JAR
        run: ./gradlew jar

      # Upload build JAR
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: apartment-app.jar
          path: build/libs/*.jar



