plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group = 'io.github.btmxh'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

javafx {
    version = "22.0.1"
    modules = ['javafx.controls', 'javafx.fxml']
}

application {
    mainClassName = "io.github.btmxh.apartmentapp.Main"
}

jar {
    manifest {
        attributes 'Main-Class': "io.github.btmxh.apartmentapp.Launcher"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'com.mysql:mysql-connector-j:9.0.0'
    implementation platform('org.apache.logging.log4j:log4j-bom:2.24.0')
    implementation 'org.apache.logging.log4j:log4j-api:${log4j-api.version}'
    runtimeOnly 'org.apache.logging.log4j:log4j-core'
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:mac"
}

test {
    useJUnitPlatform()
}

tasks.register("resetDatabase") {
    dependsOn(":resetdb:run")
}
